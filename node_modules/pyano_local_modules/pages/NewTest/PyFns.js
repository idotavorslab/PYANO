// **pages/NewTest/PyFns.js
let { Python, Path, EStore } = require("pyano_local_modules/ext_libs");
let { Alert } = require("pyano_local_modules/util/Alert");

/** @return {Promise<String[]>} */
function getSubjectDirsNames() {
	return new Promise((resolve, reject) => {
		Python.run("NewTest/get_subject_dirs_names.py", {
			args: [EStore.subjectsDirPath()],
		}, (err, response) => {
			if (err) reject(err);
			console.log(`%cPyFns.getSubjectDirsNames()`, 'color:#698651', response);
			let subjectsList = response.lowerAll();
			resolve(subjectsList);
		});

	});

}


function checkCreateNewSubject(subjectIdInputVal) {

	// Set new subject in Estore/subjects if new; else nothing
	const subjectsDirPath = EStore.subjectsDirPath();
	let pyoptions = {
		args: [subjectIdInputVal, subjectsDirPath]
	};
	Python.run("NewTest/check_create_new_subject.py", pyoptions, (err, response) => {
		if (err) throw err;
		// noinspection JSCheckFunctionSignatures
		response = JSON.parse(response);
		let subjectPath = Path.join(subjectsDirPath, subjectIdInputVal);

		if (response == "created") {
			Alert.small.info(`New subject created: ${subjectIdInputVal}`, subjectPath);

		} else if (response == "exists") {
			Alert.small.success(`Using existing subject: ${subjectIdInputVal}`, subjectPath);
		}


	});

}

module.exports = { checkCreateNewSubject, getSubjectDirsNames };
