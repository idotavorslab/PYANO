// ** pages/NewTest/newtest.js

const { EStore } = require("pyano_local_modules/ext_libs");
const { safeSwitchCss, $MainContent, $Sidebar } = require("pyano_local_modules/document");
const PyFns = require("./PyFns");
const Gui = require("./Gui");
const { SubjectPart, LevelsPart, SettingsPart } = require("./Parts/parts");


const newTestPage = {

	/**@param {boolean} reload*/
	switch: async reload => {
		EStore.config().finished_trials_count = 0;
		EStore.last_page = 'new_test';
		if (reload)
			return reloadPage();

		await asx.$fadeOut($MainContent, 100);
		$MainContent.empty();
		$MainContent.on({
			'dragover dragenter': e => {
				e.preventDefault();
				e.stopPropagation();
			},
			'drop': async e => await require("./DragDrop").onDrop(e)
		});
		require("pyano_local_modules/sidebar").to_new_test();
		safeSwitchCss("templates/css/new_test.css");
		const config = EStore.config();
		const truth = config.truth();

		Gui.setTruthSubtitle(truth);

		let subjectsList = config.getSubjectDirNames();
		$MainContent.append(
			Gui.$subtitle,
			SubjectPart.$Div,
			SettingsPart.$Div,
			LevelsPart.$Div,
			Gui.$readySaveLoadSaveas(),
		);
		EStore.subjects = subjectsList;


		await asx.$fadeInMany(150, $Sidebar, $MainContent);
		const levels = config.getLevels();

		for (let lvl of levels) {
			const $lvl = LevelsPart.addLevel();
			$lvl.$notesSelect.val(lvl.notes);
			if (lvl.rhythm != $lvl.$rhythmSwitch.val())
				$lvl.$rhythmSwitch.click();

			if (lvl.rhythm)
				$lvl.$tempoSelect.val(lvl.tempo);

			$lvl.$trialsSelect.val(lvl.trials);
		}
		Gui.toggleButtons(!levels.someHaveZeroes());
	}

};
module.exports = newTestPage;
