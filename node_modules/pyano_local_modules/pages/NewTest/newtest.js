// **pages/NewTest/newtest.js

let { EStore } = require("pyano_local_modules/ext_libs");
let { safeSwitchCss, $MainContent, $Sidebar } = require("pyano_local_modules/document");
let PyFns = require("./PyFns");
// let Elements = require("./Elements");
let Gui = require("./Gui");
let { SubjectPart, LevelsPart, SettingsPart } = require("./Parts/parts");


// TODO: unused
/*function _toMode(mode) {
	SettingsPart.toMode(mode);
	LevelsPart.toMode(mode);
}
*/

const newTestPage = {

	/**@param {boolean} reload*/
	switch: async reload => {
		EStore.set({ last_page: 'new_test', 'current_test.finished_trials_count': 0 });
		if (reload)
			return reloadPage();

		await asx.$fadeOutMany(100, $Sidebar, $MainContent);
		$MainContent.empty();
		$MainContent.on({
			'dragover dragenter': e => {
				e.preventDefault();
				e.stopPropagation();
			},
			'drop': async e => await require("./DragDrop").onDrop(e)
		});
		require("pyano_local_modules/sidebar").to_new_test();
		safeSwitchCss("templates/css/new_test.css");
		const truth = EStore.truth();

		Gui.setTruthFileSubtitle(truth);
		let subjectsList = await PyFns.getSubjectDirsNames();
		$MainContent.append(
			Gui.$subtitle,
			SubjectPart.$Div,
			SettingsPart.$Div,
			LevelsPart.$Div,
			Gui.$readySaveLoadSaveas(),
		);
		EStore.set('subjects', subjectsList);
		if (!(EStore.subjectName().in(subjectsList)))
			EStore.set('current_test.current_subject', null);


		await asx.$fadeInMany(300, $Sidebar, $MainContent);
		const levels = EStore.getLevels();

		for (let lvl of levels) {
			const $lvl = LevelsPart.addLevel();
			$lvl.$notesSelect.val(lvl.notes);
			if (lvl.rhythm != $lvl.$rhythmSwitch.val()) {
				$lvl.$rhythmSwitch.click();
			}
			if (lvl.rhythm) {
				$lvl.$tempoSelect.val(lvl.tempo);
			}
			$lvl.$trialsSelect.val(lvl.trials);
		}
		Gui.toggleButtons(!levels.someHaveZeroes());
	}

};
module.exports = newTestPage;
