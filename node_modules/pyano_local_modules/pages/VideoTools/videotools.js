const log = s => [`%c${s}`, 'color: #245ed1'];
let { EStore } = require("pyano_local_modules/ext_libs");
let { $fadeOut, $fadeInMany, $fadeOutMany, $fadeIn } = require("pyano_local_modules/util");
let { safeSwitchCss, $MainContent, $Sidebar, $Title } = require("pyano_local_modules/document");
let { Alert } = require("pyano_local_modules/util/Alert");
let Path = require("path");
const $ = require('jquery');
const videoToolsPage = {
	switch: async (reload) => {
		console.log(...log(`videoToolsPage.switch(${reload})`));
		EStore.setLastPage('video_tools');
		if (reload) {
			let { remote } = require("electron");
			const currentWindow = remote.getCurrentWindow();
			currentWindow.reload();
		}
		await $fadeOut($MainContent, 100);
		$MainContent.empty();
		require("pyano_local_modules/sidebar").to_video_tools();
		safeSwitchCss("templates/css/video_tools.css");
		let $bigMessage = $('<div id="big_message">')
			.text('Drop a video file');
		let $dropArea = $('<div id="drop_area">')
			.on({
				'dragover dragenter': e => {
					e.preventDefault();
					e.stopPropagation();
				}, 'drop': async e => {
					let { name, path, size, type } = e.originalEvent.dataTransfer.files[0];
					if (!"video".in(type))
						Alert.small.warning('Not a video file');
					if (name.lower().endsWith('mov')) {
						let { value: shouldConvert } = await Alert.big.blocking({
							title: 'Convert to mp4?',
							html: name,
							showConfirmButton: true,
							showCancelButton: true,
						});
						if (shouldConvert) {
							let { execSync } = require('child_process');
							let mp4 = Path.join(Path.dirname(path), Path.basename(name, '.mov')) + '.mp4';
							try {
								execSync(`ffmpeg -i "${path}" -codec copy "${mp4}"`, { encoding: 'utf8', stdio: 'inherit' });
							} catch (e) {
								Alert.small.error('Convert failed', 'Maybe the converted file exists already?');
							}

						
						}
					}
				}
			});

		$MainContent.append($bigMessage, $dropArea);
		await $fadeIn($MainContent, 300);
	}
};

module.exports = videoToolsPage;
