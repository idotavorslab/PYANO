class Dict<T> {
    constructor(obj: T) {
        Object.assign(this, obj);
    }
    
    * items(): IterableIterator<[string, T[keyof T]]> {
        const proxy = this as unknown as T;
        for (let k in proxy) {
            yield [k, proxy[k]];
        }
    }
}


export function dict<T>(obj: T): Dict<T> {
    return new Dict<T>(obj);
}



