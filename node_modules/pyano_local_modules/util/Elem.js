"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var Dict_1 = require("./Dict");
var Elem = (function () {
    function Elem(elemOptions) {
        var tag = elemOptions.tag, id = elemOptions.id, htmlElement = elemOptions.htmlElement, text = elemOptions.text, query = elemOptions.query, children = elemOptions.children, cls = elemOptions.cls;
        if ([tag, id, htmlElement, query].filter(function (x) { return x; }).length > 1)
            throw new Error("Received more than one, pass exactly one of: [tag, id, htmlElement, query], " + {
                tag: tag,
                id: id,
                htmlElement: htmlElement,
                query: query
            });
        if (tag)
            this._htmlElement = document.createElement(tag);
        else if (id)
            this._htmlElement = document.getElementById(id);
        else if (query)
            this._htmlElement = document.querySelector(query);
        else if (htmlElement)
            this._htmlElement = htmlElement;
        else
            throw new Error("Didn't receive one, pass exactly one of: [tag, id, htmlElement, query], " + {
                tag: tag,
                id: id,
                htmlElement: htmlElement,
                query: query
            });
        if (text !== undefined)
            this.text(text);
        if (cls !== undefined)
            this.setClass(cls);
        if (children !== undefined) {
            if (tag)
                throw new Error("Received children and tag, impossible since tag implies creating a new element and children implies getting an existing one. " + {
                    tag: tag,
                    id: id,
                    htmlElement: htmlElement,
                    text: text,
                    query: query,
                    children: children
                });
            this.cacheChildren(children);
        }
    }
    Object.defineProperty(Elem.prototype, "e", {
        get: function () {
            return this._htmlElement;
        },
        enumerable: true,
        configurable: true
    });
    Elem.prototype.html = function (html) {
        this._htmlElement.innerHTML = html;
        return this;
    };
    Elem.prototype.text = function (txt) {
        this.e.innerText = txt;
        return this;
    };
    Elem.prototype.id = function (id) {
        this.e.id = id;
        return this;
    };
    Elem.prototype.css = function (css) {
        for (var _i = 0, _a = Dict_1.dict(css).items(); _i < _a.length; _i++) {
            var _b = _a[_i], styleAttr = _b[0], styleVal = _b[1];
            this.e.style[styleAttr] = styleVal;
        }
        return this;
    };
    Elem.prototype.uncss = function () {
        var removeProps = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            removeProps[_i] = arguments[_i];
        }
        var css = {};
        for (var _a = 0, removeProps_1 = removeProps; _a < removeProps_1.length; _a++) {
            var prop = removeProps_1[_a];
            css[prop] = '';
        }
        return this.css(css);
    };
    Elem.prototype.animate = function (opts) {
        console.group('animate, opts: ', opts);
        var optionals = [opts.timingFunction, opts.delay, opts.iterationCount, opts.direction, opts.fillMode, opts.playState];
        var animation = opts.name + " " + opts.duration + " " + optionals.filter(function (v) { return v; }).join(' ');
        console.groupEnd();
        return this.css({ animation: animation });
    };
    Elem.prototype.class = function () {
        return Array.from(this.e.classList);
    };
    Elem.prototype.addClass = function (cls) {
        var clses = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            clses[_i - 1] = arguments[_i];
        }
        this.e.classList.add(cls);
        for (var _a = 0, clses_1 = clses; _a < clses_1.length; _a++) {
            var c = clses_1[_a];
            this.e.classList.add(c);
        }
        return this;
    };
    Elem.prototype.removeClass = function (cls) {
        this.e.classList.remove(cls);
        return this;
    };
    Elem.prototype.replaceClass = function (oldToken, newToken) {
        this.e.classList.replace(oldToken, newToken);
        return this;
    };
    Elem.prototype.setClass = function (cls) {
        this.e.className = cls;
        return this;
    };
    Elem.prototype.toggleClass = function (cls, force) {
        this.e.classList.toggle(cls, force);
        return this;
    };
    Elem.prototype.append = function () {
        var children = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            children[_i] = arguments[_i];
        }
        for (var _a = 0, children_1 = children; _a < children_1.length; _a++) {
            var child = children_1[_a];
            this.e.appendChild(child.e);
        }
        return this;
    };
    Elem.prototype.cacheAppend = function (keyChildObj) {
        for (var _i = 0, _a = Dict_1.dict(keyChildObj).items(); _i < _a.length; _i++) {
            var _b = _a[_i], key = _b[0], child = _b[1];
            this.e.appendChild(child.e);
            this[key] = child;
        }
        return this;
    };
    Elem.prototype.child = function (selector) {
        return new Elem({ htmlElement: this.e.querySelector(selector) });
    };
    Elem.prototype.replaceChild = function (newChild, oldChild) {
        this.e.replaceChild(newChild.e, oldChild.e);
        return this;
    };
    Elem.prototype.children = function () {
        var childrenVanilla = Array.from(this.e.children);
        var toElem = function (c) { return new Elem({ htmlElement: c }); };
        return childrenVanilla.map(toElem);
    };
    Elem.prototype.cacheChildren = function (keySelectorObj) {
        for (var _i = 0, _a = Dict_1.dict(keySelectorObj).items(); _i < _a.length; _i++) {
            var _b = _a[_i], key = _b[0], selector = _b[1];
            this[key] = this.child(selector);
        }
    };
    Elem.prototype.empty = function () {
        while (this.e.firstChild)
            this.e.removeChild(this.e.firstChild);
        return this;
    };
    Elem.prototype.remove = function () {
        this.e.remove();
        return this;
    };
    Elem.prototype.on = function (evTypeFnPairs, options) {
        var that = this;
        var _loop_1 = function (evType, evFn) {
            this_1.e.addEventListener(evType, function _f(evt) {
                evFn(evt);
            }, options);
        };
        var this_1 = this;
        for (var _i = 0, _a = Dict_1.dict(evTypeFnPairs).items(); _i < _a.length; _i++) {
            var _b = _a[_i], evType = _b[0], evFn = _b[1];
            _loop_1(evType, evFn);
        }
        return this;
    };
    Elem.prototype.touchstart = function (fn, options) {
        this.e.addEventListener('touchstart', function _f(ev) {
            ev.preventDefault();
            fn(ev);
            if (options && options.once)
                this.removeEventListener('touchstart', _f);
        });
        return this;
    };
    Elem.prototype.pointerdown = function (fn, options) {
        var evType;
        if ("onpointerdown" in window)
            evType = 'pointerdown';
        else
            evType = 'mousedown';
        this.e.addEventListener(evType, function _f(ev) {
            ev.preventDefault();
            fn(ev);
            if (options && options.once)
                this.removeEventListener(evType, _f);
        });
        return this;
    };
    Elem.prototype.click = function (fn) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        this.e.addEventListener('click', fn);
        return this;
    };
    Elem.prototype.attr = function (attrValPairs) {
        for (var _i = 0, _a = Dict_1.dict(attrValPairs).items(); _i < _a.length; _i++) {
            var _b = _a[_i], attr = _b[0], val = _b[1];
            this.e.setAttribute(attr, val);
        }
        return this;
    };
    Elem.prototype.removeAttribute = function (qualifiedName) {
        this.e.removeAttribute(qualifiedName);
        return this;
    };
    Elem.prototype.data = function (key, parse) {
        if (parse === void 0) { parse = true; }
        var data = this.e.getAttribute("data-" + key);
        if (parse)
            return JSON.parse(data);
        else
            return data;
    };
    Elem.prototype.fade = function (dur, to) {
        return __awaiter(this, void 0, void 0, function () {
            var styles, transProp, indexOfOpacity, transDur, opacityTransDur, trans, isFadeOut, opacity, steps, opStep, everyms, reachedTo, interval;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        styles = window.getComputedStyle(this.e);
                        transProp = styles.transitionProperty.split(', ');
                        indexOfOpacity = transProp.indexOf('opacity');
                        if (!(indexOfOpacity !== -1)) return [3, 2];
                        transDur = styles.transitionDuration.split(', ');
                        opacityTransDur = transDur[indexOfOpacity];
                        trans = styles.transition.split(', ');
                        console.warn("fade(" + dur + ", " + to + "), opacityTransDur !== undefined. nullifying transition. SHOULD NOT WORK");
                        console.log("trans:\t" + trans + "\ntransProp:\t" + transProp + "\nindexOfOpacity:\t" + indexOfOpacity + "\nopacityTransDur:\t" + opacityTransDur);
                        trans.splice(indexOfOpacity, 1, "opacity 0s");
                        console.log("after, trans: " + trans);
                        this.e.style.transition = trans.join(', ');
                        this.css({ opacity: to });
                        return [4, asx.wait(dur)];
                    case 1:
                        _a.sent();
                        return [2, this];
                    case 2:
                        if (dur == 0) {
                            return [2, this.css({ opacity: to })];
                        }
                        isFadeOut = to === 0;
                        opacity = parseFloat(this.e.style.opacity);
                        if (opacity === undefined || isNaN(opacity)) {
                            console.warn("fade(" + dur + ", " + to + ") htmlElement has NO opacity at all. recursing", {
                                opacity: opacity,
                                'this.e': this.e,
                                this: this
                            });
                            return [2, this.css({ opacity: Math.abs(1 - to) }).fade(dur, to)];
                        }
                        else {
                            if (isFadeOut ? opacity <= 0 : opacity > 1) {
                                console.warn("fade(" + dur + ", " + to + ") opacity was beyond target opacity. returning this as is.", {
                                    opacity: opacity,
                                    'this.e': this.e,
                                    this: this
                                });
                                return [2, this];
                            }
                        }
                        steps = 30;
                        opStep = 1 / steps;
                        everyms = dur / steps;
                        if (everyms < 1) {
                            everyms = 1;
                            steps = dur;
                            opStep = 1 / steps;
                        }
                        console.log("fade(" + dur + ", " + to + ") had opacity, no transition. (good) opacity: " + opacity, {
                            steps: steps,
                            opStep: opStep,
                            everyms: everyms
                        });
                        reachedTo = isFadeOut ? function (op) { return op - opStep > 0; } : function (op) { return op + opStep < 1; };
                        interval = setInterval(function () {
                            if (reachedTo(opacity)) {
                                if (isFadeOut)
                                    opacity -= opStep;
                                else
                                    opacity += opStep;
                                _this.css({ opacity: opacity });
                            }
                            else {
                                opacity = to;
                                _this.css({ opacity: opacity });
                                clearInterval(interval);
                            }
                        }, everyms);
                        return [4, asx.wait(dur)];
                    case 3:
                        _a.sent();
                        return [2, this];
                }
            });
        });
    };
    Elem.prototype.fadeOut = function (dur) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.fade(dur, 0)];
                    case 1: return [2, _a.sent()];
                }
            });
        });
    };
    Elem.prototype.fadeOutOLD = function (dur) {
        return __awaiter(this, void 0, void 0, function () {
            var styles, trans, transProp, indexOfOpacity, transDur, opacityTransDur, opacity, steps, opDec, everyms, interval;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        styles = window.getComputedStyle(this.e);
                        trans = styles.transition.split(', ');
                        transProp = styles.transitionProperty.split(', ');
                        indexOfOpacity = transProp.indexOf('opacity');
                        if (!(indexOfOpacity !== -1)) return [3, 2];
                        transDur = styles.transitionDuration.split(', ');
                        opacityTransDur = transDur[indexOfOpacity];
                        console.warn('fadeOut, opacityTransDur !== undefined. leveraging transition.');
                        console.log("trans:\t" + trans + "\ntransProp:\t" + transProp + "\nindexOfOpacity:\t" + indexOfOpacity + "\nopacityTransDur:\t" + opacityTransDur);
                        trans.splice(indexOfOpacity, 1, "opacity 0s");
                        console.log("after, trans: " + trans);
                        this.e.style.transition = trans.join(', ');
                        this.css({ opacity: 0 });
                        return [4, asx.wait(dur)];
                    case 1:
                        _a.sent();
                        return [2, this];
                    case 2:
                        if (dur == 0) {
                            return [2, this.css({ opacity: 0 })];
                        }
                        opacity = parseFloat(this.e.style.opacity);
                        if (opacity === undefined || isNaN(opacity)) {
                            console.warn("fadeOut(" + dur + ") htmlElement has NO opacity at all. recursing", {
                                opacity: opacity,
                                'this.e': this.e,
                                this: this
                            });
                            return [2, this.css({ opacity: 1 }).fadeOut(dur)];
                        }
                        else if (opacity <= 0) {
                            console.warn('fadeOut opacity was lower equal to 0', {
                                opacity: opacity,
                                'this.e': this.e,
                                this: this
                            });
                            return [2, this];
                        }
                        steps = 30;
                        opDec = 1 / steps;
                        everyms = dur / steps;
                        if (everyms < 1) {
                            everyms = 1;
                            steps = dur;
                            opDec = 1 / steps;
                        }
                        console.log("fadeOut(" + dur + ") had opacity, no transition. opacity: " + opacity, { steps: steps, opDec: opDec, everyms: everyms });
                        interval = setInterval(function () {
                            if (opacity - opDec > 0) {
                                opacity -= opDec;
                                _this.css({ opacity: opacity });
                            }
                            else {
                                opacity = 0;
                                _this.css({ opacity: opacity });
                                clearInterval(interval);
                            }
                        }, everyms);
                        return [4, asx.wait(dur)];
                    case 3:
                        _a.sent();
                        return [2, this];
                }
            });
        });
    };
    Elem.prototype.fadeIn = function (dur) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.fade(dur, 1)];
                    case 1: return [2, _a.sent()];
                }
            });
        });
    };
    Elem.prototype.fadeInOLD = function (dur) {
        return __awaiter(this, void 0, void 0, function () {
            var styles, trans, transProp, indexOfOpacity, transDur, opacityTransDur, opacity, steps, opInc, everyms, interval;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        styles = window.getComputedStyle(this.e);
                        trans = styles.transition.split(', ');
                        transProp = styles.transitionProperty.split(', ');
                        indexOfOpacity = transProp.indexOf('opacity');
                        if (!(indexOfOpacity !== -1)) return [3, 2];
                        transDur = styles.transitionDuration.split(', ');
                        opacityTransDur = transDur[indexOfOpacity];
                        console.warn('fadeIn, opacityTransDur !== undefined. leveraging transition.');
                        console.log("trans:\t" + trans + "\ntransProp:\t" + transProp + "\nindexOfOpacity:\t" + indexOfOpacity + "\nopacityTransDur:\t" + opacityTransDur);
                        trans.splice(indexOfOpacity, 1, "opacity 0s");
                        console.log("after, trans: " + trans);
                        this.e.style.transition = trans.join(', ');
                        this.css({ opacity: 1 });
                        return [4, asx.wait(dur)];
                    case 1:
                        _a.sent();
                        return [2, this];
                    case 2:
                        if (dur == 0)
                            return [2, this.css({ opacity: 1 })];
                        opacity = parseFloat(this.e.style.opacity);
                        if (opacity == undefined || isNaN(opacity)) {
                            console.warn("fadeIn(" + dur + ") htmlElement has NO opacity at all. recursing", {
                                opacity: opacity,
                                'this.e': this.e,
                                this: this
                            });
                            return [2, this.css({ opacity: 0 }).fadeIn(dur)];
                        }
                        else if (opacity > 1) {
                            console.warn("fadeIn(" + dur + ") opacity was higher than 1", {
                                opacity: opacity,
                                'this.e': this.e,
                                this: this
                            });
                            return [2, this];
                        }
                        steps = 30;
                        opInc = 1 / steps;
                        everyms = dur / steps;
                        if (everyms < 1) {
                            everyms = 1;
                            steps = dur;
                            opInc = 1 / steps;
                        }
                        console.log("fadeIn(" + dur + ") had opacity, no transition. opacity: " + opacity, { steps: steps, opInc: opInc, everyms: everyms });
                        interval = setInterval(function () {
                            if (opacity + opInc < 1) {
                                opacity += opInc;
                                _this.css({ opacity: opacity });
                            }
                            else {
                                opacity = 1;
                                _this.css({ opacity: opacity });
                                clearInterval(interval);
                            }
                        }, everyms);
                        return [4, asx.wait(dur)];
                    case 3:
                        _a.sent();
                        return [2, this];
                }
            });
        });
    };
    return Elem;
}());
var Div = (function (_super) {
    __extends(Div, _super);
    function Div(_a) {
        var _b = _a === void 0 ? {} : _a, id = _b.id, text = _b.text, cls = _b.cls;
        var _this = _super.call(this, { tag: "div", text: text, cls: cls }) || this;
        if (id)
            _this.id(id);
        return _this;
    }
    return Div;
}(Elem));
var Span = (function (_super) {
    __extends(Span, _super);
    function Span(_a) {
        var _b = _a === void 0 ? {} : _a, id = _b.id, text = _b.text, cls = _b.cls;
        var _this = _super.call(this, { tag: 'span', text: text, cls: cls }) || this;
        if (id)
            _this.id(id);
        return _this;
    }
    return Span;
}(Elem));
var Img = (function (_super) {
    __extends(Img, _super);
    function Img(_a) {
        var id = _a.id, src = _a.src, cls = _a.cls;
        var _this = _super.call(this, { tag: 'img', cls: cls }) || this;
        if (id)
            _this.id(id);
        if (src)
            _this._htmlElement.src = src;
        return _this;
    }
    return Img;
}(Elem));
function elem(elemOptions) {
    return new Elem(elemOptions);
}
exports.elem = elem;
function span(_a) {
    var id = _a.id, text = _a.text, cls = _a.cls;
    return new Span({ id: id, text: text, cls: cls });
}
function div(_a) {
    var id = _a.id, text = _a.text, cls = _a.cls;
    return new Div({ id: id, text: text, cls: cls });
}
function img(_a) {
    var id = _a.id, src = _a.src, cls = _a.cls;
    return new Img({ id: id, src: src, cls: cls });
}
//# sourceMappingURL=Elem.js.map