export declare function isObject(obj: any): boolean;
export declare function shallowProperty(key: any): (obj: any) => any;
export declare function getLength(collection: any): any;
export declare function anyDefined(obj: any): boolean;
export declare function equalsAny(obj: any, ...others: any[]): boolean;
export declare function anyTruthy(obj: any): boolean;
export declare function allUndefined(obj: any): boolean;
export declare function isArrayLike(collection: any): boolean;
export declare function enumerate(obj: any): any[];
export declare function wait(ms: any): Promise<unknown>;
export declare function bool(val: any): boolean;
export declare function isArray(obj: any): boolean;
export declare function isEmptyArr(collection: any): boolean;
export declare function isEmptyObj(obj: any): boolean;
export declare function isFunction(fn: any): boolean;
export declare const str: (val: any) => any;
export declare function sum(arr: any): number;
export declare const int: (num: any) => number;
export declare const max: (...values: any[]) => number;
export declare const min: (...values: any[]) => number;
export declare function range(start: any, stop: any): Generator<any, void, unknown>;
export declare function round(n: any, d?: number): number;
export declare const small: (...args: any[]) => string[];
export declare function zip(arr1: any, arr2: any): Generator<any[], void, unknown>;
export declare function getCurrentWindow(): any;
export declare function reloadPage(): void;
export declare const strong: (s: any) => string;
export declare const bold: (s: any) => string;
export declare function $midVertAlign(html: any): any;
//# sourceMappingURL=util.d.ts.map